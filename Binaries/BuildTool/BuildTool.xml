<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BuildTool</name>
    </assembly>
    <members>
        <member name="T:BuildTool.CMakeGenerator">
            <summary>
            CMake 프로젝트를 생성합니다.
            </summary>
        </member>
        <member name="M:BuildTool.CMakeGenerator.#ctor(BuildTool.Solution)">
            <summary>
            개체의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:BuildTool.CMakeGenerator.Generate">
            <inheritdoc/>
        </member>
        <member name="M:BuildTool.CMakeGenerator.GenerateAPI(BuildTool.ModuleRule,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:BuildTool.ISolutionGenerator">
            <summary>
            <see cref="T:BuildTool.Solution"/> 개체에서 생성된 정보를 기반으로 각 플랫폼에 맞는 프로젝트를 생성합니다.
            </summary>
        </member>
        <member name="M:BuildTool.ISolutionGenerator.Generate">
            <summary>
            프로젝트 및 솔루션 파일을 생성합니다.
            </summary>
        </member>
        <member name="M:BuildTool.ISolutionGenerator.GenerateAPI(BuildTool.ModuleRule,System.Boolean)">
            <summary>
            API 매크로를 생성합니다.
            </summary>
            <param name="rule"> 모듈 규칙을 전달합니다. </param>
            <param name="isExport"> 이 모듈이 export 대상인지 나타내는 값을 전달합니다. </param>
            <returns> 생성된 매크로가 반환됩니다. </returns>
        </member>
        <member name="T:BuildTool.ModuleCategory">
            <summary>
            모듈의 범주를 나타냅니다.
            </summary>
        </member>
        <member name="F:BuildTool.ModuleCategory.Game">
            <summary>
            게임 프로젝트를 나타냅니다. 디버그 상태에 가깝습니다.
            </summary>
        </member>
        <member name="F:BuildTool.ModuleCategory.Engine">
            <summary>
            엔진 프로젝트를 나타냅니다. 배포 상태에 가깝습니다.
            </summary>
        </member>
        <member name="F:BuildTool.ModuleCategory.ThirdParty">
            <summary>
            서드파티 프로젝트를 나타냅니다. 항상 배포 상태입니다.
            </summary>
        </member>
        <member name="T:BuildTool.ModuleRule">
            <summary>
            모듈의 규칙을 표현합니다.
            </summary>
        </member>
        <member name="M:BuildTool.ModuleRule.#ctor">
            <summary>
            개체의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.ProjectName">
            <summary>
            모듈 프로젝트 이름을 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.SafeProjectName">
            <summary>
            C++ Syntax 요소가 제거된 이름을 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.TargetName">
            <summary>
            프로젝트 타깃 이름을 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.FilterPath">
            <summary>
            프로젝트의 필터 경로를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.Category">
            <summary>
            모듈의 범주를 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.ModuleType">
            <summary>
            모듈의 형식을 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.SourceCodeExtensions">
            <summary>
            소스 코드를 나타내는 확장자 목록을 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.HeaderExtensions">
            <summary>
            헤더를 나타내는 확장자 목록을 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.NonBuildExtensions">
            <summary>
            빌드에 포함되지 않는 확장자 목록을 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.SupportsVcpkg">
            <summary>
            Vcpkg 지원 여부를 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.NonUnityBuild">
            <summary>
            UnityBuild를 사용하지 않도록 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PrivatePCHHeader">
            <summary>
            프로젝트가 사용할 PCH 헤더 파일의 이름을 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PublicDependencyModuleNames">
            <summary>
            공용 의존 모듈 이름 목록을 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PrivateDependencyModuleNames">
            <summary>
            개인 의존 모듈 이름 목록을 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PublicIncludePaths">
            <summary>
            공용 포함 패스 목록을 지정합니다. 이 모듈을 의존하는 모든 프로젝트에 적용됩니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PrivateIncludePaths">
            <summary>
            개인 포함 패스 목록을 지정합니다. 이 프로젝트에만 적용됩니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PublicAdditionalMacros">
            <summary>
            공용 추가 정의 매크로 목록을 지정합니다. 이 모듈을 의존하는 모든 프로젝트에 적용됩니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PrivateAdditionalMacros">
            <summary>
            개인 추가 정의 매크로 목록을 지정합니다. 이 프로젝트에만 적용됩니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PublicDisableWarnings">
            <summary>
            공용 비활성 경고 번호 목록을 지정합니다. 이 모듈을 의존하는 모든 프로젝트에 적용됩니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PrivateDisableWarnings">
            <summary>
            개인 비활성 경고 번호 목록을 지정합니다. 이 프로젝트에만 적용됩니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PublicAdditionalLibraries">
            <summary>
            공용 추가 라이브러리 목록을 지정합니다. 이 모듈을 의존하는 모든 프로젝트에 적용됩니다.
            </summary>
        </member>
        <member name="P:BuildTool.ModuleRule.PrivateAdditionalLibraries">
            <summary>
            개인 추가 라이브러리 목록을 지정합니다. 이 프로젝트에만 적용됩니다.
            </summary>
        </member>
        <member name="T:BuildTool.ModuleType">
            <summary>
            모듈의 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:BuildTool.ModuleType.None">
            <summary>
            빌드 대상에 포함되지 않는 모듈 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:BuildTool.ModuleType.Application">
            <summary>
            실행 가능한 모듈 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:BuildTool.ModuleType.ConsoleApplication">
            <summary>
            콘솔 창과 함께 실행되는 모듈 형식을 나타냅니다.
            </summary>
        </member>
        <member name="F:BuildTool.ModuleType.Library">
            <summary>
            다른 모듈에 필요한 기능을 제공합니다.
            </summary>
        </member>
        <member name="T:BuildTool.PlatformStatics">
            <summary>
            BuildTool이 지원하는 플랫폼 목록에 대한 바인딩을 제공합니다.
            </summary>
        </member>
        <member name="F:BuildTool.PlatformStatics.Platforms">
            <summary>
            지원 플랫폼 목록입니다.
            </summary>
        </member>
        <member name="F:BuildTool.PlatformStatics.Platforms_Macro">
            <summary>
            지원 플랫폼 목록의 매크로 이름입니다.
            </summary>
        </member>
        <member name="T:BuildTool.Project">
            <summary>
            네이티브 프로젝트 단위를 표현합니다.
            </summary>
        </member>
        <member name="M:BuildTool.Project.#ctor(DotNETUtilities.FileReference,System.Reflection.Assembly,BuildTool.SolutionDirectoryReference)">
            <summary>
            개체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="rule"> Solution.cs 파일의 레퍼런스를 전달합니다. </param>
            <param name="assembly"> 미리 컴파일 된 어셈블리를 전달합니다. </param>
            <param name="solutionDirectory"> 모듈이 포함 된 솔루션 디렉토리 레퍼런스를 전달합니다. </param>
        </member>
        <member name="M:BuildTool.Project.ToString">
            <inheritdoc/>
        </member>
        <member name="P:BuildTool.Project.Rule">
            <summary>
            모듈 규칙 클래스를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Project.Directory">
            <summary>
            모듈 코드가 위치한 디렉토리를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Project.SolutionDirectory">
            <summary>
            모듈의 솔루션 디렉토리를 가져옵니다.
            </summary>
        </member>
        <member name="M:BuildTool.Project.BuildReferences(BuildTool.Solution,BuildTool.Project[])">
            <summary>
            프로젝트를 빌드합니다.
            </summary>
            <param name="solution"> 솔루션 정보를 전달합니다. </param>
            <param name="dependencyModules"> 의존 관계의 프로젝트 목록을 전달합니다. </param>
        </member>
        <member name="P:BuildTool.Project.Solution">
            <summary>
            이 프로젝트가 참조하는 솔루션을 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Project.DependencyModules">
            <summary>
            이 프로젝트가 의존하는 모든 모듈의 목록을 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Project.IncludePaths">
            <summary>
            이 프로젝트가 포함해야 하는 소스 코드의 위치 목록을 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Project.AdditionalMacros">
            <summary>
            이 프로젝트가 추가로 정의해야 하는 매크로 목록을 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Project.DisableWarnings">
            <summary>
            이 프로젝트가 비활성화해야 하는 경고 번호 목록을 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Project.AdditionalLibraries">
            <summary>
            이 프로젝트가 추가로 포함해야 하는 라이브러리 목록을 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Project.IntermediateIncludePath">
            <summary>
            이 프로젝트의 임시 포함 파일 위치를 가져옵니다.
            </summary>
        </member>
        <member name="M:BuildTool.Project.GenerateAPIs(BuildTool.ISolutionGenerator)">
            <summary>
            API 매크로 목록을 생성합니다.
            </summary>
            <param name="generator"> 플랫폼 프로젝트 생성 인터페이스를 전달합니다. </param>
            <returns> 매크로 리스트가 반환됩니다. </returns>
        </member>
        <member name="T:BuildTool.RuleClassException">
            <summary>
            필요한 Rule 클래스를 대상 어셈블리에서 찾지 못했습니다.
            </summary>
        </member>
        <member name="M:BuildTool.RuleClassException.#ctor(DotNETUtilities.FileReference,System.Type)">
            <summary>
            개체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="classCode"> 클래스 코드 원본을 전달합니다. </param>
            <param name="requiredType"> 필요한 형식을 전달합니다. </param>
        </member>
        <member name="M:BuildTool.RuleClassException.#ctor(DotNETUtilities.FileReference,System.Type,System.Type[])">
            <summary>
            개체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="classCode"> 클래스 코드 원본을 전달합니다. </param>
            <param name="matchedType"> 일치한 형식을 전달합니다. </param>
            <param name="ctorTypes"> 필요한 생성자 형식 목록을 전달합니다. </param>
        </member>
        <member name="M:BuildTool.RuleClassException.#ctor(DotNETUtilities.FileReference,System.Type,System.Exception)">
            <summary>
            개체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="classCode"> 클래스 코드 원본을 전달합니다. </param>
            <param name="matchedType"> 일치한 형식을 전달합니다. </param>
            <param name="innerException"> 생성자 실행 중 발생한 예외 개체를 전달합니다. </param>
        </member>
        <member name="P:BuildTool.RuleClassException.ClassCode">
            <summary>
            예외를 발생시킨 규칙 코드 파일을 가져옵니다.
            </summary>
        </member>
        <member name="T:BuildTool.Solution">
            <summary>
            네이티브 솔루션 단위를 표현합니다.
            </summary>
        </member>
        <member name="M:BuildTool.Solution.#ctor(DotNETUtilities.FileReference)">
            <summary>
            개체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="rule"> Solution.cs 파일의 레퍼런스를 전달합니다. </param>
        </member>
        <member name="M:BuildTool.Solution.ToString">
            <inheritdoc/>
        </member>
        <member name="P:BuildTool.Solution.Rule">
            <summary>
            솔루션 규칙 클래스를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Solution.Directory">
            <summary>
            솔루션 코드가 위치한 디렉토리를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Solution.EngineDirectory">
            <summary>
            엔진 코드가 위치한 디렉토리를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Solution.ThirdpartyDirectory">
            <summary>
            서드파티 코드가 위치한 디렉토리를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Solution.ProgramsDirectory">
            <summary>
            도구 프로그램의 루트 디렉토리를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.Solution.Projects">
            <summary>
            이 솔루션에 포함되는 프로젝트 목록을 가져옵니다.
            </summary>
        </member>
        <member name="M:BuildTool.Solution.BuildReferences">
            <summary>
            생성된 솔루션과 포함 프로젝트 목록을 전부 빌드합니다.
            </summary>
        </member>
        <member name="T:BuildTool.SolutionDirectoryReference">
            <summary>
            솔루션 단위 디렉토리의 레퍼런스를 표현합니다.
            </summary>
        </member>
        <member name="M:BuildTool.SolutionDirectoryReference.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:BuildTool.SolutionDirectoryReference.#ctor(DotNETUtilities.DirectoryReference)">
            <summary>
            <see cref="T:DotNETUtilities.DirectoryReference"/> 개체로부터 새 인스턴스를 초기화합니다.
            </summary>
            <param name="from"> 복사본 개체를 전달합니다. </param>
        </member>
        <member name="P:BuildTool.SolutionDirectoryReference.Source">
            <summary>
            소스 디렉토리를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.SolutionDirectoryReference.Intermediate">
            <summary>
            임시 디렉토리를 가져옵니다.
            </summary>
        </member>
        <member name="P:BuildTool.SolutionDirectoryReference.Build">
            <summary>
            빌드 디렉토리를 가져옵니다.
            </summary>
        </member>
        <member name="T:BuildTool.SolutionRule">
            <summary>
            솔루션 정의 규칙을 표현합니다.
            </summary>
        </member>
        <member name="M:BuildTool.SolutionRule.#ctor">
            <summary>
            개체의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="P:BuildTool.SolutionRule.SolutionName">
            <summary>
            솔루션의 이름을 나타냅니다. 일반적으로 큰 의미를 가지지 않습니다.
            </summary>
        </member>
        <member name="P:BuildTool.SolutionRule.StaticLibraries">
            <summary>
            이 솔루션의 모든 모듈이 Static 라이브러리로 링크됩니다.
            </summary>
        </member>
        <member name="P:BuildTool.SolutionRule.GameRoot">
            <summary>
            게임 루트 디렉토리를 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.SolutionRule.EngineRoot">
            <summary>
            엔진 루트 디렉토리를 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.SolutionRule.ThirdpartyRoot">
            <summary>
            서드파티 루트 디렉토리를 지정합니다.
            </summary>
        </member>
        <member name="P:BuildTool.SolutionRule.ProgramsRoot">
            <summary>
            도구 프로그램의 루트 디렉토리를 지정합니다.
            </summary>
        </member>
        <member name="M:BuildTool.SolutionRule.GenerateEngine(System.String)">
            <summary>
            표준 엔진 경로를 사용해 <see cref="P:BuildTool.SolutionRule.EngineRoot"/>, <see cref="P:BuildTool.SolutionRule.ThirdpartyRoot"/> 및 <see cref="P:BuildTool.SolutionRule.ProgramsRoot"/> 프로퍼티를 채웁니다.
            </summary>
            <param name="path"> 경로를 전달합니다. </param>
        </member>
        <member name="T:BuildTool.VisualStudioVersion">
            <summary>
            Visual Studio 버전 정보를 나타냅니다.
            </summary>
        </member>
        <member name="F:BuildTool.VisualStudioVersion.VS2019">
            <summary>
            Visual Studio 2019 버전입니다.
            </summary>
        </member>
        <member name="F:BuildTool.VisualStudioVersion.VS2022">
            <summary>
            Visual Studio 2022 버전입니다.
            </summary>
        </member>
        <member name="T:BuildTool.VSGenerator">
            <summary>
            Visual Studio 프로젝트를 생성합니다.
            </summary>
        </member>
        <member name="M:BuildTool.VSGenerator.#ctor(BuildTool.Solution,BuildTool.VisualStudioVersion)">
            <summary>
            개체의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="solution"> 생성할 솔루션 개체를 전달합니다. </param>
            <param name="version"> 생성할 버전을 전달합니다. </param>
        </member>
        <member name="M:BuildTool.VSGenerator.Generate">
            <inheritdoc/>
        </member>
        <member name="M:BuildTool.VSGenerator.GenerateAPI(BuildTool.ModuleRule,System.Boolean)">
            <inheritdoc/>
        </member>
    </members>
</doc>
