<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNETUtilities</name>
    </assembly>
    <members>
        <member name="T:DotNETUtilities.CommandLine">
            <summary>
            명령줄 전달 매개변수를 해석합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.CommandLine.ContainsKey(System.String)">
            <summary>
            --로 시작하는 확장 매개변수에서 지정한 키가 설정되었는지 검사합니다.
            </summary>
            <param name="key"> 키를 전달합니다. </param>
            <returns> 키를 포함할 경우 <see langword="true"/>가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.CommandLine.ContainsKey(System.Char)">
            <summary>
            -로 시작하는 매개변수에서 지정한 키가 설정되었는지 검사합니다.
            </summary>
            <param name="key"> 키를 전달합니다. </param>
            <returns> 키를 포함할 경우 <see langword="true"/>가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.CommandLine.TryGetValue(System.Char,System.String@)">
            <summary>
            -로 시작하는 매개변수에서 지정한 키에 해당하는 값을 가져옵니다.
            </summary>
            <param name="key"> 키를 전달합니다. </param>
            <param name="value"> 키에 해당하는 값이 반환됩니다. 값이 없는 매개변수이거나 값이 2개 이상인 경우 <see langword="null"/>이 반환됩니다. </param>
            <returns> 값이 채워질 경우 <see langword="true"/>가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.CommandLine.TryGetValue(System.String@)">
            <summary>
            범위가 지정되지 않은 매개변수 값을 가져옵니다.
            </summary>
            <param name="value"> 값이 반환됩니다. 값이 없거나 2개 이상인 경우 <see langword="null"/>이 반환됩니다. </param>
            <returns> 값이 채워질 경우 <see langword="true"/>가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.CommandLine.FromConsoleArgs(System.String[])">
            <summary>
            콘솔 명령줄 데이터를 이용해 새 <see cref="T:DotNETUtilities.CommandLine"/> 개체를 생성합니다.
            </summary>
            <param name="args"> 콘솔 명령줄 데이터를 전달합니다. </param>
            <returns> 생성된 <see cref="T:DotNETUtilities.CommandLine"/> 개체가 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.ConsoleCursorPin">
            <summary>
            고정된 콘솔의 위치를 기록하는 개체를 표현합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.ConsoleCursorPin.Create(System.Int32)">
            <summary>
            콘솔의 현재 위치를 기록하고 <paramref name="height"/>만큼 개행합니다.
            </summary>
            <param name="height"> 예약된 줄 개수를 전달합니다. </param>
            <returns> 현재 위치를 나타내는 개체가 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.ConsoleEx">
            <summary>
            콘솔 화면에 대한 입/출력을 제어합니다. 전용 스레드를 사용합니다.
            </summary>
        </member>
        <member name="T:DotNETUtilities.ConsoleProgressBar">
            <summary>
            콘솔 화면에 진행률을 표시하는 기능을 제공합니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.ConsoleProgressBar.Name">
            <summary>
            진행률 개체의 표시 이름을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.ConsoleProgressBar.Text">
            <summary>
            진행률 개체의 표시 텍스트를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.ConsoleProgressBar.Progress">
            <summary>
            현재 진행률 상태를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.ConsoleProgressBar.SetProgress(System.Double,System.Double)">
            <summary>
            완료 단계를 지정하여 진행률 상태를 계산합니다.
            </summary>
            <param name="progress"> 현재 진행률 상태를 전달합니다. </param>
            <param name="goal"> 완료 상태를 전달합니다. </param>
        </member>
        <member name="P:DotNETUtilities.ConsoleProgressBar.TickRate">
            <summary>
            진행 상태의 업데이트를 위한 최소 변화량을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.ConsoleProgressBar.Create(System.String)">
            <summary>
            현재 콘솔 위치에 진행률 표시 공간을 예약하고 해당 공간을 사용하는 진행률 표시 개체를 생성합니다.
            </summary>
            <param name="name"> 진행률 표시 이름을 전달합니다. </param>
            <returns> 개체가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.ConsoleProgressBar.Null">
            <summary>
            화면에 표시되지 않는 진행률 표시 개체를 생성합니다.
            </summary>
            <returns> 개체가 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.CRC32">
            <summary>
            CRC32 해시 알고리즘을 사용합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.CRC32.Reset">
            <summary>
            알고리즘 테이블을 리셋합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.CRC32.#ctor(System.UInt32)">
            <summary>
            개체를 초기화합니다.
            </summary>
            <param name="seed"> 씨드 값을 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.CRC32.Generate32(System.String)">
            <summary>
            32비트 해시 값을 생성합니다.
            </summary>
            <param name="data"> 데이터를 전달합니다. </param>
            <returns> 값이 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.DirectoryReference">
            <summary>
            .NET 환경에서 지원되는 파일 시스템에서 특정 경로에 대한 디렉토리 레퍼런스를 지원합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.#ctor(System.String)">
            <summary>
            상대정 경로 및 전체 경로를 포함하여 프로그램에서 인식할 수 있는 경로로 디렉토리 레퍼런스를 생성합니다.
            </summary>
            <param name="InPath"> 프로그램이 지원하는 경로 유형을 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.CreateIfNotExists(System.Boolean)">
            <summary>
            이 레퍼런스에 해당하는 디렉토리가 존재하지 않는다면 새로 생성합니다.
            </summary>
            <param name="recursive"> 재귀적으로 경로상의 모든 디렉토리를 생성합니다. </param>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.Move(System.String)">
            <summary>
            이 레퍼런스에 해당하는 디렉토리에서 특정 디렉토리로 이동합니다.
            </summary>
            <param name="ChangeDirectoryPath"> 이동하기 위한 상대 경로를 전달합니다. </param>
            <returns> 이동된 디렉토리 레퍼런스가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.GetCurrentFiles">
            <summary>
            현재 디렉토리에 있는 파일 레퍼런스를 가져옵니다.
            </summary>
            <returns> 파일 레퍼런스 목록을 가져옵니다. </returns>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.GetAllFiles(System.Boolean)">
            <summary>
            현재 디렉토리 및 선택적으로 하위 디렉토리를 포함하여 디렉토리에 있는 파일 레퍼런스를 가져옵니다.
            </summary>
            <param name="bRecursive"> 재귀적으로 모든 하위 디렉토리를 검사합니다. </param>
            <returns> 파일 레퍼런스 목록을 가져옵니다. </returns>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.GetCurrentDirectories">
            <summary>
            현재 디렉토리에 있는 하위 디렉토리 레퍼런스를 가져옵니다.
            </summary>
            <returns> 디렉토리 레퍼런스 목록을 가져옵니다. </returns>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.Remove(System.Boolean)">
            <summary>
            이 디렉토리를 지웁니다.
            </summary>
            <param name="bRecursiveAll"> 재귀적으로 전부 지웁니다. </param>
        </member>
        <member name="P:DotNETUtilities.DirectoryReference.IsExist">
            <summary>
            해당 레퍼런스에 해당하는 디렉토리이 존재하는지 검사합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.ConvertFilePaths(System.String[])">
            <summary>
            파일 경로를 파일 레퍼런스 형식으로 변환합니다.
            </summary>
            <param name="InPaths"> 경로 목록을 전달합니다. </param>
            <returns> 레퍼런스 목록을 반환합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.ConvertDirectoryPaths(System.String[])">
            <summary>
            디렉토리 경로를 디렉토리 레퍼런스 형식으로 변환합니다.
            </summary>
            <param name="InPaths"> 경로 목록을 전달합니다. </param>
            <returns> 레퍼런스 목록을 반환합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.CleanupAllItems(System.Boolean,System.Boolean)">
            <summary>
            해당 레퍼런스의 디렉토리에 있는 모든 정보를 제거합니다.
            </summary>
            <param name="bCreateDirectory"> 디렉토리가 존재하지 않을 경우 새로 생성합니다. </param>
            <param name="recursive"> 재귀적으로 하위 디렉터리도 제거합니다. </param>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.GetFile(System.String)">
            <summary>
            해당 디렉토리에 하위 파일에 대한 레퍼런스를 가져옵니다.
            </summary>
            <param name="fileName"> 파일 이름을 전달합니다. </param>
            <returns> 생성된 레퍼런스가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.DirectoryReference.GetUserTemp(System.String)">
            <summary>
            유저의 임시 디렉토리를 가져옵니다.
            </summary>
            <param name="additionalRecursePath"> 임시 디렉토리 내부 추가 디렉토리 상태를 전달합니다. </param>
            <returns> 임시 디렉토리가 반환됩니다. </returns>
        </member>
        <member name="P:DotNETUtilities.DirectoryReference.IsSymbolicLink">
            <summary>
            디렉토리가 심볼릭 링크로 생성된 개체인지 나타내는 값을 가져옵니다.
            </summary>
        </member>
        <member name="T:DotNETUtilities.DynamicCompilation">
            <summary>
            동적 컴파일에 대한 공용 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.DynamicCompilation.CompileAssemblyAsync(System.String,System.Collections.Generic.IEnumerable{DotNETUtilities.FileReference},System.Collections.Generic.IEnumerable{DotNETUtilities.FileReference},System.Threading.CancellationToken)">
            <summary>
            어셈블리를 동적으로 컴파일합니다.
            </summary>
            <param name="assemblyName"> 어셈블리 이름을 전달합니다. </param>
            <param name="sourceFiles"> 소스 코드 목록을 전달합니다. </param>
            <param name="referencedAssemblies"> 어셈블리가 참조할 어셈블리의 파일 목록을 전달합니다. </param>
            <param name="cancellationToken"> 작업을 취소할 수 있는 토큰을 전달합니다. </param>
            <returns> 컴파일 된 어셈블리가 반환됩니다. </returns>
            <exception cref="T:DotNETUtilities.DynamicCompileErrorException"> 컴파일 오류가 발생했을 때 발생합니다. </exception>
        </member>
        <member name="M:DotNETUtilities.DynamicCompilation.CompileAssemblyAsync``1(System.String,DotNETUtilities.FileReference,System.Threading.CancellationToken)">
            <summary>
            단일 소스 파일과 단일 참조 어셈블리를 사용해 동적 어셈블리를 컴파일합니다.
            </summary>
            <typeparam name="T"> 단일 참조 어셈블리가 포함하는 아무 형식을 전달합니다. </typeparam>
            <param name="assemblyName"> 어셈블리 이름을 전달합니다. </param>
            <param name="sourceFile"> 단일 소스 파일을 전달합니다. </param>
            <param name="cancellationToken"> 작업을 취소할 수 있는 토큰을 전달합니다. </param>
            <returns> 컴파일 된 어셈블리가 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.DynamicCompileErrorException">
            <summary>
            <see cref="T:DotNETUtilities.DynamicCompilation"/> 기능의 컴파일 과정에서 발생한 오류를 수집합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.DynamicCompileErrorException.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostic})">
            <summary>
            오류 기록을 참고하여 예외 개체를 생성합니다.
            </summary>
            <param name="assemblyName"> 예외 발생 어셈블리 이름을 전달합니다. </param>
            <param name="diagnostics"> 오류 기록을 전달합니다. </param>
        </member>
        <member name="T:DotNETUtilities.EnumerableExtensions">
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> 개체에 대한 공통 확장 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.EnumerableExtensions.Contains``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            지정한 조건을 만족하는 개체가 포함되었는지 나타내는 값을 가져옵니다.
            </summary>
            <typeparam name="T"> 열거 형식의 제네릭 형식을 전달합니다. </typeparam>
            <param name="enumerable"> 열거 개체를 전달합니다. </param>
            <param name="predic"> 검사식을 전달합니다. </param>
            <returns> 개체가 포함되었을 경우 <see langword="true"/>가, 그 이외의 경우 <see langword="false"/>가 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.FileReference">
            <summary>
            .NET 환경에서 지원되는 파일 시스템에서 특정 경로에 대한 파일 레퍼런스를 지원합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.FileReference.#ctor(System.String)">
            <summary>
            상대정 경로 및 전체 경로를 포함하여 프로그램에서 인식할 수 있는 경로로 파일 레퍼런스를 생성합니다.
            </summary>
            <param name="InPath"> 프로그램이 지원하는 경로 유형을 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.FileReference.CompareExtension(System.String)">
            <summary>
            확장자를 비교합니다.
            </summary>
            <param name="InExtension"> 확장자를 전달합니다. </param>
            <returns> 비교 결과가 반환됩니다. </returns>
        </member>
        <member name="P:DotNETUtilities.FileReference.IsExist">
            <summary>
            해당 레퍼런스에 해당하는 파일이 존재하는지 검사합니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.FileReference.FileName">
            <summary>
            확장자가 포함된 파일 이름을 가져옵니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.FileReference.Extension">
            <summary>
            지정된 경로에서 대상의 확장자를 가져옵니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.FileReference.Delete">
            <summary>
            파일이 존재할 경우 파일을 지웁니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.FileReference.CopyToAsync(DotNETUtilities.FileReference,System.Boolean)">
            <summary>
            파일을 대상 위치로 복사합니다.
            </summary>
            <param name="copyDst"> 대상 위치를 전달합니다. </param>
            <param name="overwrite"> 파일을 덮어쓸지 나타내는 값을 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.FileReference.ReadAllText">
            <summary>
            해당 레퍼런스에 해당하는 파일의 텍스트 데이터를 모두 읽습니다.
            </summary>
            <returns> 읽은 텍스트 데이터가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.FileReference.ReadAllText(System.Text.Encoding)">
            <summary>
            해당 레퍼런스에 해당하는 파일의 텍스트 데이터를 모두 읽습니다.
            </summary>
            <param name="encoding"> 인코딩 정보를 전달합니다. </param>
            <returns> 읽은 텍스트 데이터가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.FileReference.WriteAllText(System.String,System.Text.Encoding)">
            <summary>
            해당 레퍼런스에 해당하는 파일에 모든 텍스트 데이터를 씁니다.
            </summary>
            <param name="text"> 텍스트 데이터를 전달합니다. </param>
            <param name="encoding"> 인코딩 정보를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.FileReference.WriteAllTextIfChanged(System.String,System.Text.Encoding)">
            <summary>
            해당 레퍼런스에 해당하는 파일에 모든 텍스트 데이터를 씁니다. 파일이 변경되었을 때에만 쓰기 작업을 실행합니다.
            </summary>
            <param name="text"> 텍스트 데이터를 전달합니다. </param>
            <param name="encoding"> 인코딩 정보를 전달합니다. </param>
            <returns> 쓰기 작업이 실행되었으면 <see langword="true"/>가, 그 이외의 경우 <see langword="false"/>가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.FileReference.OpenStream(System.IO.FileMode)">
            <summary>
            레퍼런스에 해당하는 파일의 스트림을 엽니다.
            </summary>
            <param name="fileMode"> 파일 열기 모드를 전달합니다. </param>
            <returns> 열린 스트림이 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.FileReference.GetTemp">
            <summary>
            임시 파일 레퍼런스를 획득합니다.
            </summary>
            <returns> 파일 레퍼런스가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.FileReference.ChangeExtensions(System.String)">
            <summary>
            파일의 확장자 명을 변경하고 대상으로 새 참조를 생성합니다.
            </summary>
            <param name="newExtensions"> 변경할 확장명을 전달합니다. </param>
            <returns> 생성된 개체가 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.FileSystemReference">
            <summary>
            .NET 환경에서 지원되는 파일 시스템에서 특정 경로에 대한 레퍼런스를 지원합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.FileSystemReference.#ctor(System.String)">
            <summary>
            상대정 경로 및 전체 경로를 포함하여 프로그램에서 인식할 수 있는 경로로 레퍼런스를 생성합니다.
            </summary>
            <param name="InPath"> 프로그램이 지원하는 경로 유형을 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.FileSystemReference.GetRelativePath(DotNETUtilities.FileSystemReference)">
            <summary>
            대상 레퍼런스와 상대적 경로를 가져옵니다.
            </summary>
            <param name="InReference"> 대상 레퍼런스를 전달합니다. </param>
            <returns> 상대적 경로가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.FileSystemReference.GetParent">
            <summary>
            상위 디렉토리를 가져옵니다.
            </summary>
            <returns> 디렉토리 레퍼런스가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.FileSystemReference.ToString">
            <summary>
            레퍼런스 이름을 가져옵니다.
            </summary>
            <returns> 전체 경로가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.FileSystemReference.TryOpenExplorer(System.String)">
            <summary>
            해당 경로를 파일 탐색기에서 엽니다.
            </summary>
            <param name="explorerName"> 탐색기에 해당하는 프로그램 이름을 전달합니다. </param>
            <returns> 성공 여부가 반환됩니다.</returns>
        </member>
        <member name="M:DotNETUtilities.FileSystemReference.OpenExplorer(System.String)">
            <summary>
            해당 경로를 파일 탐색기에서 엽니다.
            </summary>
            <param name="explorerName"> 탐색기에 해당하는 프로그램 이름을 전달합니다. </param>
        </member>
        <member name="P:DotNETUtilities.FileSystemReference.Name">
            <summary>
            지정된 경로에서 대상의 이름을 가져옵니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.FileSystemReference.FullPath">
            <summary>
            전체 경로를 가져옵니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.FileSystemReference.Root">
            <summary>
            경로의 루트를 가져옵니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.FileSystemReference.NormalizePathSeparator(System.String)">
            <summary>
            경로의 구분자를 애플리케이션의 지원 구분자 형식으로 정규화합니다.
            </summary>
            <param name="inPath"> 경로를 전달합니다. </param>
            <returns> 정규화된 경로가 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.ListExtensions">
            <summary>
            <see cref="T:System.Collections.Generic.IList`1"/> 인터페이스 개체에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.ListExtensions.IsValidIndex``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            지정한 인덱스가 대상 리스트 개체에 대해 유효한지 검사합니다.
            </summary>
            <typeparam name="T"> 리스트 개체의 형식 매개변수를 전달합니다. </typeparam>
            <param name="this"> 리스트 개체를 전달합니다. </param>
            <param name="indexOf"> 인덱스 번호를 전달합니다. </param>
            <returns> 유효할 경우 <see langword="true"/>가, 그 이외의 경우 <see langword="false"/>가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.ListExtensions.IndexOf``1(System.Collections.Generic.IList{``0},``0)">
            <summary>
            대상 컨테이너에서 지정한 아이템의 인덱스 위치를 가져옵니다.
            </summary>
            <typeparam name="T"> 형식 매개변수를 전달합니다. </typeparam>
            <param name="this"> 컨테이너 개체를 전달합니다. </param>
            <param name="predicate"> 찾을 아이템을 전달합니다. </param>
            <returns> 대상을 찾았을 경우 대상의 위치에 대한 인덱스가, 찾지 못했을 경우 -1이 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.ListExtensions.IndexOf``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean})">
            <summary>
            대상 컨테이너에서 지정한 아이템의 인덱스 위치를 가져옵니다.
            </summary>
            <typeparam name="T"> 형식 매개변수를 전달합니다. </typeparam>
            <param name="this"> 컨테이너 개체를 전달합니다. </param>
            <param name="predicate"> 찾을 아이템을 구분할 함수를 전달합니다. </param>
            <returns> 대상을 찾았을 경우 대상의 위치에 대한 인덱스가, 찾지 못했을 경우 -1이 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.Log">
            <summary>
            콘솔 화면에 출력하는 로그에 대한 공통 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.Log.Verbose(DotNETUtilities.LogCategoryAttribute,DotNETUtilities.LogVerbosity,System.String,System.Object[])">
            <summary>
            콘솔 화면에 로그를 출력합니다.
            </summary>
            <param name="category"> 로그 카테고리를 전달합니다. </param>
            <param name="verbosity"> 로그 레벨을 전달합니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Action(System.Action)">
            <summary>
            로그성 행동을 로그 스레드에서 실행합니다.
            </summary>
            <param name="logAction"> 로그성 행동을 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Trace(DotNETUtilities.LogCategoryAttribute,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Info"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="category"> 로그 카테고리를 전달합니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Trace(System.Object,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Trace"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="self"> <see cref="T:DotNETUtilities.LogCategoryAttribute"/> 특성을 소유한 개체를 전달합니다. 없을 경우 <see langword="null"/>이 사용됩니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Info(DotNETUtilities.LogCategoryAttribute,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Info"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="category"> 로그 카테고리를 전달합니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Info(System.Object,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Info"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="self"> <see cref="T:DotNETUtilities.LogCategoryAttribute"/> 특성을 소유한 개체를 전달합니다. 없을 경우 <see langword="null"/>이 사용됩니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Warning(DotNETUtilities.LogCategoryAttribute,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Warning"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="category"> 로그 카테고리를 전달합니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Warning(System.Object,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Warning"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="self"> <see cref="T:DotNETUtilities.LogCategoryAttribute"/> 특성을 소유한 개체를 전달합니다. 없을 경우 <see langword="null"/>이 사용됩니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Error(DotNETUtilities.LogCategoryAttribute,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Error"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="category"> 로그 카테고리를 전달합니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Error(System.Object,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Error"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="self"> <see cref="T:DotNETUtilities.LogCategoryAttribute"/> 특성을 소유한 개체를 전달합니다. 없을 경우 <see langword="null"/>이 사용됩니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Critical(DotNETUtilities.LogCategoryAttribute,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Critical"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="category"> 로그 카테고리를 전달합니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Critical(System.Object,System.String,System.Object[])">
            <summary>
            <see cref="F:DotNETUtilities.LogVerbosity.Critical"/> 로그 레벨로 로그를 출력합니다.
            </summary>
            <param name="self"> <see cref="T:DotNETUtilities.LogCategoryAttribute"/> 특성을 소유한 개체를 전달합니다. 없을 경우 <see langword="null"/>이 사용됩니다. </param>
            <param name="format"> 서식 텍스트를 전달합니다. </param>
            <param name="args"> 서식 매개변수를 전달합니다. </param>
        </member>
        <member name="M:DotNETUtilities.Log.Shutdown">
            <summary>
            모든 대기 로그를 출력하고 로그 스레드를 종료합니다.
            </summary>
        </member>
        <member name="T:DotNETUtilities.LogCategoryAttribute">
            <summary>
            대상 클래스에 로그 카테고리를 지정합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.LogCategoryAttribute.#ctor(System.String)">
            <summary>
            개체를 초기화합니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.LogCategoryAttribute.CategoryName">
            <summary>
            카테고리 이름을 가져옵니다.
            </summary>
        </member>
        <member name="T:DotNETUtilities.LogEntry">
            <summary>
            로그 출력 정보를 빌드합니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.LogEntry.Category">
            <summary>
            로그 카테고리를 나타냅니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.LogEntry.Verbosity">
            <summary>
            로그 수준을 나타냅니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.LogEntry.Message">
            <summary>
            로그 출력 메시지를 나타냅니다.
            </summary>
        </member>
        <member name="P:DotNETUtilities.LogEntry.LogAction">
            <summary>
            로그 모듈에서 실행할 로그 액션을 나타냅니다.
            </summary>
        </member>
        <member name="T:DotNETUtilities.LogVerbosity">
            <summary>
            로그 출력 레벨을 나타냅니다.
            </summary>
        </member>
        <member name="F:DotNETUtilities.LogVerbosity.Trace">
            <summary>
            디버그성 로그를 나타냅니다.
            </summary>
        </member>
        <member name="F:DotNETUtilities.LogVerbosity.Info">
            <summary>
            프로그램 실행에 대한 정보를 표현하는 로그를 나타냅니다.
            </summary>
        </member>
        <member name="F:DotNETUtilities.LogVerbosity.Warning">
            <summary>
            프로그램 실행 중 발생한 경고 사항에 대한 로그를 나타냅니다.
            </summary>
        </member>
        <member name="F:DotNETUtilities.LogVerbosity.Error">
            <summary>
            프로그램 실행 중 발생한 복구 가능한 오류 사항에 대한 로그를 나타냅니다.
            </summary>
        </member>
        <member name="F:DotNETUtilities.LogVerbosity.Critical">
            <summary>
            프로그램 실행 중 발생한 복구 불가능한 오류 사항에 대한 로그를 나타냅니다.
            </summary>
        </member>
        <member name="T:DotNETUtilities.StringUtility">
            <summary>
            <see cref="T:System.String"/> 개체에 대한 공통 확장 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.StringUtility.IndexOfAny(System.String,System.Collections.Generic.IList{System.String},System.Int32,System.Int32,System.StringComparison)">
            <summary>
            지정한 문자열에서 대상 문자열 중 최초로 발견된 문자열의 리스트 인덱스를 찾습니다. 없을 경우 -1을 반환합니다.
            </summary>
            <param name="text"> 문자열을 전달합니다. </param>
            <param name="findStrs"> 찾을 문자열 목록을 전달합니다. </param>
            <param name="startIndex"> 문자열을 찾기 시작할 위치를 전달합니다. </param>
            <param name="count"> 찾을 문자열의 길이를 전달합니다. </param>
            <param name="comparison"> 문자열 찾기 옵션을 전달합니다. </param>
            <returns> 찾은 문자열의 리스트 인덱스를 전달합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.StringUtility.IndexOfAny(System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,System.StringComparison)">
            <summary>
            지정한 문자열에서 대상 문자열 중 최초로 발견된 문자열의 리스트 인덱스를 찾습니다. 없을 경우 -1을 반환합니다.
            </summary>
            <param name="text"> 문자열을 전달합니다. </param>
            <param name="findStrs"> 찾을 문자열 목록을 전달합니다. </param>
            <param name="startIndex"> 문자열을 찾기 시작할 위치를 전달합니다. </param>
            <param name="count"> 찾을 문자열의 길이를 전달합니다. </param>
            <param name="comparison"> 문자열 찾기 옵션을 전달합니다. </param>
            <returns> 찾은 문자열의 리스트 인덱스를 전달합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.StringUtility.EqualsSpan(System.String,System.Int32,System.ReadOnlySpan{System.Char},System.StringComparison)">
            <summary>
            지정한 문자열에서 특정 부분을 대상 문자 범위와 비교합니다.
            </summary>
            <param name="text"> 문자열을 전달합니다. </param>
            <param name="indexOf"> 비교 시작 위치를 전달합니다. </param>
            <param name="span"> 비교 대상 문자 범위를 전달합니다. </param>
            <param name="comparison"> 비교 메서드를 전달합니다. </param>
            <returns> 비교 결과가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.StringUtility.IsValidIndex(System.String,System.Index)">
            <summary>
            지정한 문자열에서 특정 위치가 유효한 위치인지 검사합니다.
            </summary>
            <param name="text"> 문자열을 전달합니다. </param>
            <param name="indexOf"> 검사 위치를 전달합니다. </param>
            <returns> 유효 상태를 나타내는 값이 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.TypeExtensions">
            <summary>
            <see cref="T:System.Type"/> 클래스에 대한 공통 확장 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.TypeExtensions.IsIntegral(System.Type)">
            <summary>
            형식이 정수 계열 형식인지 확인합니다.
            </summary>
            <param name="type"> 형식 개체를 전달합니다. </param>
            <returns> 정수 계열 형식일 경우 <see langword="true"/>를, 그 이외의 경우 <see langword="false"/>를 반환합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.TypeExtensions.IsSignedIntegral(System.Type)">
            <summary>
            형식이 부호 있는 정수 계열 형식인지 확인합니다.
            </summary>
            <param name="type"> 형식 개체를 전달합니다. </param>
            <returns> 부호 있는 정수 계열 형식일 경우 <see langword="true"/>를, 그 이외의 경우 <see langword="false"/>를 반환합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.TypeExtensions.IsUnsignedIntegral(System.Type)">
            <summary>
            형식이 부호 없는 정수 계열 형식인지 확인합니다.
            </summary>
            <param name="type"> 형식 개체를 전달합니다. </param>
            <returns> 부호 없는 정수 계열 형식일 경우 <see langword="true"/>를, 그 이외의 경우 <see langword="false"/>를 반환합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.TypeExtensions.IsString(System.Type)">
            <summary>
            형식이 문자열 형식인지 확인합니다.
            </summary>
            <param name="type"> 형식 개체를 전달합니다. </param>
            <returns> 문자열 형식일 경우 <see langword="true"/>를, 그 이외의 경우 <see langword="false"/>를 반환합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.TypeExtensions.IsFloating(System.Type)">
            <summary>
            형식이 실수 계열 형식인지 확인합니다.
            </summary>
            <param name="type"> 형식 개체를 전달합니다. </param>
            <returns> 실수 계열 형식일 경우 <see langword="true"/>를, 그 이외의 경우 <see langword="false"/>를 반환합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.TypeExtensions.IsDerivedFrom``1(System.Type)">
            <summary>
            지정 형식이 대상 클래스 형식을 상속하는지 검사합니다.
            </summary>
            <typeparam name="T"> 대상 클래스 형식을 전달합니다. </typeparam>
            <param name="type"> 지정 형식을 전달합니다. </param>
            <returns> 대상 클래스 형식을 상속하는지 나타내는 값을 반환합니다. </returns>
        </member>
        <member name="M:DotNETUtilities.TypeExtensions.GetSafeFullName(System.Type)">
            <summary>
            지정 형식의 <see cref="P:System.Type.FullName"/>을 가져옵니다. <see langword="null"/>을 반환할 경우 <see cref="P:System.Reflection.MemberInfo.Name"/>을 가져옵니다.
            </summary>
            <param name="type"> 지정 형식을 전달합니다. </param>
            <returns> <see langword="null"/>이 아닌 이름이 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.TypeExtensions.AssemblyLocation(System.Type)">
            <summary>
            형식의 어셈블리 파일 레퍼런스를 가져옵니다.
            </summary>
            <param name="type"> 형식을 전달합니다. </param>
            <returns> 파일 레퍼런스가 반환됩니다. </returns>
        </member>
        <member name="T:DotNETUtilities.XmlExtensions">
            <summary>
            <see cref="T:System.Xml.XmlDocument"/> 및 <see cref="T:System.Xml.XmlNode"/> 개체에 대한 공통 확장 함수를 제공합니다.
            </summary>
        </member>
        <member name="M:DotNETUtilities.XmlExtensions.NewDeclaration(System.Xml.XmlDocument)">
            <summary>
            새 XML 선언 노드를 생성하고 문서에 바로 추가합니다. 선언 노드는 언제나 최상단에 삽입됩니다.
            </summary>
            <returns> 생성된 선언 노드 개체가 반환됩니다. </returns>
        </member>
        <member name="M:DotNETUtilities.XmlExtensions.SaveIfChanged(System.Xml.XmlDocument,DotNETUtilities.FileReference)">
            <summary>
            XML 문서를 파일에 저장합니다. 변경 사항이 있을 경우에만 쓰기 작업이 진행됩니다.
            </summary>
            <param name="doc"> 저장할 문서 개체를 전달합니다. </param>
            <param name="saveTo"> 저장할 위치가 기록된 파일 레퍼런스를 전달합니다. </param>
            <returns> 쓰기 작업이 실행되었으면 <see langword="true"/>가, 그 이외의 경우 <see langword="false"/>가 반환됩니다. </returns>
        </member>
    </members>
</doc>
